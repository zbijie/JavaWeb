<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"   
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/aop   
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
                        http://www.springframework.org/schema/mvc   
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
                        http://www.springframework.org/schema/tx   
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">  
         
    <!-- 引入JDBC配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${db.drivers}</value>
		</property>
		<property name="url">
			<value>${db.url}</value>
		</property>
		<property name="username">
			<value>${db.user}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
	</bean>

    <!-- 配置sqlSessionFactory --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" /> 
		<property name="mapperLocations" value="classpath:mapper/*/*Mapper.xml" />
	</bean>
	
	<!-- 配置sqlSessionTemplate -->  
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>

    <!-- 配置事务 --> 
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- SpringMVC上传文件时,需配置MultipartResolver处理器 --> 

	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	     <!-- 指定所上传文件的总大小不能超过80M......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和 --> 
	     <property name="maxUploadSize" value="80000000"/>  
	
	 </bean>  
	 <!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException --> 
	 <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 --> 
	 <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	     <property name="exceptionMappings">  
	         <props>  
	             <!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 --> 
	             <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
	         </props>  
	     </property>  
	 </bean> 
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	 <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

	
	<!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="com.fzy.demo" />
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven />
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
    
    
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"  />
        </tx:attributes>  
    </tx:advice>
    
    <aop:config>  
        <aop:pointcut id="servicePoointcut" 
            expression="execution(* com.fzy.*.*.service.*.*(..))" />  
        <aop:advisor pointcut-ref="servicePoointcut" advice-ref="txAdvice"></aop:advisor>  
    </aop:config>
    
    <!-- 引入其他的spring配置文件 --> 
    <import resource="classpath:spring/*/*.xml"/>
    <!-- 配置SpringMVC拦截器 -->
    <mvc:interceptors>
    	<!-- 注册登录拦截器 -->
    	<mvc:interceptor>
			<mvc:mapping path="/**/*.action*"/>
			<bean class="com.fzy.interceptor.LoginHandlerInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.action*"/>
			<bean class="com.fzy.interceptor.RightsHandlerInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>